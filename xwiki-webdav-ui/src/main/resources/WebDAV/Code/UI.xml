<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="WebDAV.Code.UI" locale="">
  <web>WebDAV.Code</web>
  <name>UI</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1231841324000</creationDate>
  <parent>WebDAV.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1325884514000</date>
  <contentUpdateDate>1325884514000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{info}}{{velocity}}$services.localization.render('webdav.page.info'){{/velocity}}{{/info}}</content>
  <object>
    <name>WebDAV.Code.UI</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ee7a5f28-964d-42a0-beb7-6f86852ec093</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.WebDAV = {

  addDavLinks: function(domNode) {

    function displayDavLink(node) {
      // there is no API to get the "current" attachment name from the list
      // try to extract it from the download link
      var downloadLink = node.down("div.information").down('span.name').down('a');
      var fileName = downloadLink.getAttribute('href').replace(/.*\//,'');
      if (XWiki.WebDAV._getProtocol(fileName) == null) {
        return;
      }

      var davLink = new Element('a');
      davLink.insert(new Element('span').addClassName("fa fa-pencil-square-o"));
      davLink.addClassName("btn btn-xs btn-default");
      var davUrl = XWiki.contextPath + '/webdav/spaces/'
      for (var i = 0; i &lt; XWiki.currentDocument.spaces.length; i++) {
        davUrl = davUrl + escape(XWiki.currentDocument.spaces[i]).replace(/\//g,'%2F') +'/'
      }
      davUrl = davUrl + escape(XWiki.currentDocument.page).replace(/\//g,'%2F') +'/'

      davUrl = davUrl + fileName;
      davLink.setAttribute("href", davUrl);
      node.down("div[class*='btn-group xwikibuttonlinks']").insert({ 'top' : davLink});
      Event.observe(davLink, 'click', function(event) {
        event.stop();
        XWiki.WebDAV.davEdit(this.getAttribute('href'));
      });
    }

    // add WebDAV links and hope the browser is going to support it
    domNode &amp;&amp; domNode.select(".attachment").each(displayDavLink);
  },

  protocols : {
    'doc' : 'ms-word:ofe|u|',
    'dot' : 'ms-word:nft|u|',
    'docx' : 'ms-word:ofe|u|',
    'docm' : 'ms-word:ofe|u|',
    'dotx' : 'ms-word:nft|u|',
    'dotm' : 'ms-word:nft|u|',
    'odt' : 'ms-word:ofe|u|',
    'xls' : 'ms-excel:ofe|u|',
    'xlsx' : 'ms-excel:ofe|u|',
    'xlsm' : 'ms-excel:ofe|u|',
    'xlt' : 'ms-excel:nft|u|',
    'xltx' : 'ms-excel:nft|u|',
    'xltm' : 'ms-excel:nft|u|',
    'ppt' : 'ms-powerpoint:ofe|u|',
    'pot' : 'ms-powerpoint:nft|u|',
    'pptx' : 'ms-powerpoint:ofe|u|',
    'pptm' : 'ms-powerpoint:ofe|u|',
    'potx' : 'ms-powerpoint:nft|u|',
    'potm' : 'ms-powerpoint:nft|u|',
    'pub' : 'ms-publisher:ofe|u|',
    'vsd' : 'ms-visio:ofe|u|',
    // 'vdx' : 'ms-visio:ofe|u|', // this might conflict with a win system driver suffix
    'vsdx' : 'ms-visio:ofe|u|',
    'mdb' : 'ms-access:ofe|u|',
    'mdt' : 'ms-access:nft|u|',
    'accdb' : 'ms-access:ofe|u|',
    'mpp' : 'ms-project:ofe|u|',
    'mpd' : 'ms-project:ofe|u|',
    'mpt' : 'ms-project:nft|u|',
    'pub' : 'ms-publisher:ofe|u|',
    'dwt' : 'ms-spd:ofe|u|',
    'fwp' : 'ms-spd:ofe|u|'
  },

  _getProtocol: function(fileName) {
      var _fileName = fileName.replace(/.*\//,'');
      var suffixPos = _fileName.lastIndexOf('.');
      var suffix = _fileName.substring(suffixPos+1);
      var protocol = XWiki.WebDAV.protocols[suffix];
      return protocol;
  },

  davEdit: function(davURL) {
    if (window.ActiveXObject) {
      var editor;
      try {
        editor = new window.ActiveXObject("SharePoint.OpenDocuments");
      } catch (err) {
        window.alert("$services.localization.render('webdav.alert.initialize.activex')");
        return;
      }
      if (editor) {
        editor.EditDocument(davURL);
      } else {
        window.alert("$services.localization.render('webdav.alert.error')");
        return;
      }
    } else {
      // console.log('open url ', davURL);
      var protocol = XWiki.WebDAV._getProtocol(davURL);

      davURL = window.location.protocol + '//' + window.location.host + davURL;
      davURL = protocol + davURL;

      window.aaronk6.launchUri(davURL, function () {/* SUCCESS */},
                         function () { window.alert("$services.localization.render('webdav.alert.unsupported')") },
                         function () { window.alert("$services.localization.render('webdav.alert.error')") });
    }
  }
};
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));

function initWebDAV() {
  function checkAttachmentLoaded(event) {
    if (event &amp;&amp; event.memo.id != "Attachments") {
      return;
    }
    var attContainer = document.getElementById("attachmentscontent");
    if (attContainer) {
      XWiki.WebDAV.addDavLinks(attContainer);
    }
  }
  checkAttachmentLoaded();
  document.observe("xwiki:docextra:loaded", checkAttachmentLoaded);
}
(XWiki.domIsLoaded &amp;&amp; initWebDAV()) || document.observe("xwiki:dom:loaded", initWebDAV);</code>
    </property>
    <property>
      <name>WebDAVJSX</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>WebDAV.Code.UI</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>360ac22a-4a1a-4625-ad21-2f565dbc3f99</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/*
 * Copyright © 2015 aaronk6
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// small change to have the function in its own "namespace"
var aaronk6 = window.aaronk6 || {}
aaronk6.launchUri = function(uri, successCallback, noHandlerCallback, unknownCallback) {
	var res, parent, popup, iframe, timer, timeout, blurHandler, timeoutHandler, browser;

	function callback (cb) {
		if (typeof cb === 'function') cb();
	}

	function createHiddenIframe (parent) {
		var iframe;
		if (!parent) parent = document.body;
		iframe = document.createElement('iframe');
		iframe.style.display = 'none';
		parent.appendChild(iframe);
		return iframe;
	}

	function removeHiddenIframe(parent) {
		if (!iframe) return;
		if (!parent) parent = document.body;
		parent.removeChild(iframe);
		iframe = null;
	}

	browser = { isChrome: false, isFirefox: false, isIE: false };

	if (window.chrome &amp;&amp; !navigator.userAgent.match(/Opera|OPR\//)) {
		browser.isChrome = true;
	} else if (typeof InstallTrigger !== 'undefined') {
		browser.isFirefox = true;
	} else if ('ActiveXObject' in window) {
		browser.isIE = true;
	}

	// Proprietary msLaunchUri method (IE 10+ on Windows 8+)
	if (navigator.msLaunchUri) {
		navigator.msLaunchUri(uri, successCallback, noHandlerCallback);
	}
	// Blur hack (Chrome)
	else if (browser.isChrome) {
		blurHandler = function () {
			window.clearTimeout(timeout);
			window.removeEventListener('blur', blurHandler);
			callback(successCallback);
		};
		timeoutHandler = function () {
			window.removeEventListener('blur', blurHandler);
			callback(noHandlerCallback);
		};
		window.addEventListener('blur', blurHandler);
		timeout = window.setTimeout(timeoutHandler, 500);
		window.location.href = uri;
	}
	// Catch NS_ERROR_UNKNOWN_PROTOCOL exception (Firefox)
	else if (browser.isFirefox) {
		iframe = createHiddenIframe();
		try {
			// if we're still allowed to change the iframe's location, the protocol is registered
			iframe.contentWindow.location.href = uri;
			callback(successCallback);
		} catch (e) {
			if (e.name === 'NS_ERROR_UNKNOWN_PROTOCOL') {
				callback(noHandlerCallback);
			} else {
				callback(unknownCallback);
			}
		} finally {
			removeHiddenIframe();
		}
	}
	// Open popup, change location, check wether we can access the location after the change (IE on Windows &lt; 8)
	else if (browser.isIE) {
		popup = window.open('', 'launcher', 'width=0,height=0');
		popup.location.href = uri;
		try {
			// Try to change the popup's location - if it fails, the protocol isn't registered
			// and we'll end up in the `catch` block.
			popup.location.href = 'about:blank';
			callback(successCallback);
			// The user will be shown a modal dialog to allow the external application. While
			// this dialog is open, we cannot close the popup, so we try again and again until
			// we succeed.
			timer = window.setInterval(function () {
				popup.close();
				if (popup.closed) window.clearInterval(timer);
			}, 500);
		} catch (e) {
			// Regain access to the popup in order to close it.
			popup = window.open('about:blank', 'launcher');
			popup.close();
			callback(noHandlerCallback);
		}
	}
	// No hack we can use, just open the URL in an hidden iframe and invoke `unknownCallback`
	else {
		iframe = createHiddenIframe();
		iframe.contentWindow.location.href = uri;
		window.setTimeout(function () {
			removeHiddenIframe(parent);
			callback(unknownCallback);
		}, 500);
	}
}</code>
    </property>
    <property>
      <name>https://gist.github.com/aaronk6/d801d750f14ac31845e8</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
</xwikidoc>
